(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1931],{44829:function(e,t,n){Promise.resolve().then(n.bind(n,42969)),Promise.resolve().then(n.bind(n,52856)),Promise.resolve().then(n.bind(n,65365))},65365:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return el}});var r,a,o,s=n(72670),l=n(26608),i=n.n(l),c=n(36774),d=n.n(c);let u="".concat(d().style.fontFamily,", ").concat(i().style.fontFamily,", sans-serif");var h=n(71892),f=n(57268),m=function(){return(0,s.jsx)(s.Fragment,{children:(0,s.jsx)(h.default,{id:"track",dangerouslySetInnerHTML:{__html:"\n              (function () {\n                var el = document.createElement('script');\n                el.setAttribute('src', 'https://trail.learningman.top/script.js');\n                el.setAttribute('data-website-id', '2cd9ea13-296b-4d90-998a-bbbc5613fc20');\n                document.body.appendChild(el);\n              })();\n            "}})})},g=n(31777),p=n(98623),v=n(72574),x=n(32002);function b(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return(0,x.m6)((0,v.W)(t))}function T(){return window.matchMedia("(prefers-color-scheme: dark)").matches}let w=(0,p.j)("inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",{variants:{variant:{default:"bg-primary text-primary-foreground hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground hover:bg-destructive/90",outline:"border border-input bg-background hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-10 px-4 py-2",sm:"h-9 rounded-md px-3",lg:"h-11 rounded-md px-8",icon:"h-10 w-10"}},defaultVariants:{variant:"default",size:"default"}}),y=f.forwardRef((e,t)=>{let{className:n,variant:r,size:a,asChild:o=!1,...l}=e,i=o?g.g7:"button";return(0,s.jsx)(i,{className:b(w({variant:r,size:a,className:n})),ref:t,...l})});y.displayName="Button";var N=n(98997),k=n(57124);let R=e=>{let{...t}=e,{theme:n="system"}=(0,N.F)();return(0,s.jsx)(k.x7,{theme:n,className:"toaster group",toastOptions:{classNames:{toast:"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg",description:"group-[.toast]:text-muted-foreground",actionButton:"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground",cancelButton:"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground"}},...t})};var j=n(28024),L=n(71589);let S=j.fC;j.xz;let C=j.h_;j.x8;let O=f.forwardRef((e,t)=>{let{className:n,...r}=e;return(0,s.jsx)(j.aV,{ref:t,className:b("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",n),...r})});O.displayName=j.aV.displayName;let B=f.forwardRef((e,t)=>{let{className:n,children:r,...a}=e;return(0,s.jsxs)(C,{children:[(0,s.jsx)(O,{}),(0,s.jsxs)(j.VY,{ref:t,className:b("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",n),...a,children:[r,(0,s.jsxs)(j.x8,{className:"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground",children:[(0,s.jsx)(L.Z,{className:"h-4 w-4"}),(0,s.jsx)("span",{className:"sr-only",children:"Close"})]})]})]})});B.displayName=j.VY.displayName;let I=e=>{let{className:t,...n}=e;return(0,s.jsx)("div",{className:b("flex flex-col space-y-1.5 text-center sm:text-left",t),...n})};I.displayName="DialogHeader";let E=f.forwardRef((e,t)=>{let{className:n,...r}=e;return(0,s.jsx)(j.Dx,{ref:t,className:b("text-lg font-semibold leading-none tracking-tight",n),...r})});E.displayName=j.Dx.displayName;let A=f.forwardRef((e,t)=>{let{className:n,...r}=e;return(0,s.jsx)(j.dk,{ref:t,className:b("text-sm text-muted-foreground",n),...r})});async function P(e){let t=new URLSearchParams;return t.set("content",e),t.set("title","Playground Cangjie"),t.set("expiry_days","200"),(await fetch("https://dpaste.com/api/",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:t.toString()})).text()}async function _(e){return function(e){let t=new URL(window.location.href);return t.hash=e,t.toString()}(new URLSearchParams({hash:(await P(e)).split("/")[3].trim()}).toString())}async function V(e){let t=document.createElement("canvas"),n=t.getContext("2d");if(!n)return null;let r=new Image;return r.src=e,await new Promise(e=>{r.onload=e}),t.width=2*r.width,t.height=2*r.height,n.imageSmoothingEnabled=!0,n.imageSmoothingQuality="high",n.drawImage(r,0,0,t.width,t.height),new Promise(e=>{t.toBlob(t=>{e(t)})})}A.displayName=j.dk.displayName,n(17976);var M=n(14859);let F=null!==(a=M.env.BACKEND_URL)&&void 0!==a?a:"https://api.saki-lang.tech";M.env.BASE_URL;var U=JSON.parse('{"version":"https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json","name":"cangjie","scopeName":"source.cj","patterns":[{"include":"#strings"},{"include":"#comments"},{"include":"#keywords"},{"include":"#operators"},{"include":"#literals"},{"include":"#identifiers"}],"repository":{"comments":{"patterns":[{"name":"comment.block.saki","begin":"/\\\\*","end":"\\\\*/"},{"name":"comment.line.double-slash.saki","match":"//.*$"}]},"keywords":{"patterns":[{"name":"keyword.control.saki","match":"\\\\b(if|then|else|match|case|let|def|type|eval|impl|instance|operator|forall|exists|record|inductive|flat)\\\\b"},{"name":"keyword.operator.saki","match":"\\\\b(binary|unary|left-assoc|right-assoc|tighter-than|looser-than|same-as)\\\\b"}]},"operators":{"patterns":[{"name":"keyword.operator.saki","match":"(->|=>|::|\\\\.|\\\\^|=|:)"},{"name":"keyword.operator.symbol.saki","match":"[+\\\\-/*<>=&!^%#:]+"}]},"literals":{"patterns":[{"name":"constant.numeric.saki","match":"\\\\b(0x[0-9a-fA-F]+|0o[0-7]+|0b[01]+|[0-9]+(\\\\.[0-9]+)?)\\\\b"},{"name":"constant.character.saki","match":"\'([^\'\\\\\\\\]|\\\\\\\\.)\'"},{"name":"string.regular.saki","begin":"\\"","end":"\\""},{"name":"constant.language.boolean.saki","match":"\\\\b(true|false)\\\\b"}]},"identifiers":{"patterns":[{"name":"variable.parameter.saki","match":"\\\\b[a-zα-ω][a-zA-Zα-ωΑ-Ω0-9]*(\')?\\\\b"},{"name":"entity.name.type.saki","match":"\\\\b([A-Z][a-zA-Z]*)\\\\b"},{"name":"entity.name.class.saki","match":"\\\\b([\uD835\uDD38\uD835\uDD39ℂ\uD835\uDD3B\uD835\uDD3C\uD835\uDD3D\uD835\uDD3Eℍ\uD835\uDD40\uD835\uDD41\uD835\uDD42\uD835\uDD43\uD835\uDD44ℕ\uD835\uDD46ℙℚℝ\uD835\uDD4A\uD835\uDD4B\uD835\uDD4C\uD835\uDD4D\uD835\uDD4E\uD835\uDD4F\uD835\uDD50ℤ])\\\\b"},{"name":"entity.name.function.operator.saki","match":"\\\\(([+\\\\-/*<>=&!^%#:]+)\\\\)"}]},"strings":{"patterns":[{"name":"string.quoted.double.saki","begin":"\\"","end":"\\""}]}}}'),D=n(95487),K=n.n(D),z=n(36688);let Z=null,q=new(K());async function H(e){return await q.acquire("highlighter",async()=>{Z=await (0,z.e$)({themes:[e?"dark-plus":"github-light"],langs:[U]})}),Z}async function W(e,t){let n=await fetch("".concat(F,"/v1/exec"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({sandbox:"saki",command:t,files:{"":e}}),referrerPolicy:"unsafe-url"}),r=await n.json();return n.ok?[r,0]:429===n.status?[r,1]:[r,2]}async function J(e,t){t.setToolOutput("Compiling..."),t.setProgramOutput("Running...");let[n,r]=await W(e,"run");switch(r){case 1:throw t.setToolOutput("Payload exceeded, please try again later"),t.setProgramOutput(""),Error("Payload exceeded, please try again later");case 2:throw t.setToolOutput("Unknown Error"),t.setProgramOutput(""),Error("Unknown Error")}if(n.ok)n.stderr.length>0?t.setToolOutput(n.stderr):t.setToolOutput("Compiled!"),t.setProgramOutput(n.stdout);else throw t.setToolOutput(n.stderr),t.setProgramOutput(""),Error("Compilation Failed!")}(r=o||(o={}))[r.OK=0]="OK",r[r.RATE_LIMIT=1]="RATE_LIMIT",r[r.UNKNOWN_ERROR=2]="UNKNOWN_ERROR";var G=n(42615),Y=n(87398),$=JSON.parse('{"comments":{"lineComment":"//","blockComment":["/*","*/"]},"brackets":[["{","}"],["[","]"],["(",")"]],"autoClosingPairs":[{"open":"{","close":"}"},{"open":"b\\"\\"\\"","close":""},{"open":"b\\"\\"","close":""},{"open":"b\\"","close":"\\""},{"open":"b\'\'","close":""},{"open":"b\'","close":"\'"},{"open":"/*","close":"*/"},{"open":"\\"\\"\\"","close":"\\n\\"\\"\\""},{"open":"\\"\\"","close":""},{"open":"[","close":"]"},{"open":"(","close":")"},{"open":"\\"","close":"\\""},{"open":"\'","close":"\'"},{"open":"r\'","close":"\'"},{"open":"r\\"","close":"\\""}],"surroundingPairs":[["{","}"],["[","]"],["(",")"],["\\"","\\""],["\'","\'"]],"wordPattern":"(-?\\\\d*\\\\.\\\\d\\\\w*)|([^\\\\~\\\\!\\\\@\\\\#\\\\%\\\\^\\\\&\\\\*\\\\(\\\\)\\\\-\\\\=\\\\+\\\\[\\\\{\\\\]\\\\}\\\\\\\\\\\\|\\\\;\\\\:\\\\\'\\\\\\"\\\\,\\\\.\\\\<\\\\>\\\\/\\\\?\\\\s]+)"}');function Q(e){e.languages.register({id:"cangjie"}),e.languages.setLanguageConfiguration("cangjie",$),e.editor.getEditors().forEach(e=>e.updateOptions({unicodeHighlight:{nonBasicASCII:!1}})),(async()=>{let t=await H(T());(0,Y.L)(t,e)})()}G._m.config({paths:{vs:"https://registry.npmmirror.com/monaco-editor/0.51.0/files/min/vs"},"vs/nls":{}});let X=new(K());function ee(){return X.isBusy("run")}var et=n(95993),en=n(28114),er=n(31538),ea=n(62762),eo=n(18144);let es=new en.Y;function el(){let[e,t]=(0,f.useState)(""),[n,r]=(0,f.useState)(""),[a,l]=(0,f.useState)(!1),[i,c]=(0,f.useState)(null),d=(0,f.useCallback)(e=>null==i?void 0:i.editor.getEditors()[0].getAction(e),[null==i?void 0:i.editor]),h=(0,f.useCallback)(()=>{var e;null===(e=d("cangjie.compile.run"))||void 0===e||e.run()},[d]),g=(0,f.useCallback)(()=>{l(!a)},[a]),p=(0,eo.Z)("(min-width: 768px)");(0,f.useEffect)(()=>{p&&l(!1)},[p]);let{DialogComponent:v,addSharePictureAction:x}=function(){let[e,t]=(0,f.useState)(!1),[n,r]=(0,f.useState)(""),[a,o]=(0,f.useState)(""),[l,i]=(0,f.useState)(null),[c,d]=(0,f.useState)(""),u=(0,f.useCallback)(async e=>{var n;let a=await _(e);r(a),o(e);let s=await fetch("/img",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({code:e,shareUrl:a,dark:T()})}).then(e=>e.blob());i(s),c&&URL.revokeObjectURL(c),d(URL.createObjectURL(s)),t(!0),await (null===(n=window.umami)||void 0===n?void 0:n.track("share.picture"))},[c]),h=(0,f.useCallback)(()=>{t(!1)},[]),m=(0,f.useCallback)(()=>{if(l){let e=document.createElement("a");e.href=URL.createObjectURL(l),e.download="share.svg",e.dispatchEvent(new MouseEvent("click")),k.Am.success("已下载图片")}else k.Am.error("图片未生成")},[l]),g=(0,f.useCallback)(async()=>{if(l&&c){let e=await V(c);if(!e){k.Am.error("图片生成失败");return}await navigator.clipboard.write([new ClipboardItem({"image/png":e})]),k.Am.success("已复制图片到剪贴板")}else k.Am.error("图片未生成")},[l,c]),p=(0,f.useMemo)(()=>(0,s.jsx)(S,{open:e,onOpenChange:h,children:(0,s.jsxs)(B,{className:"max-w-2xl max-h-[80vh] overflow-auto ".concat(T()&&"dark"),children:[(0,s.jsx)(I,{children:(0,s.jsx)(E,{children:"分享代码图片"})}),(0,s.jsx)("div",{className:"flex flex-col items-start p-4 rounded max-h-[60vh] overflow-y-auto",children:(0,s.jsx)("img",{src:c,alt:"preview"})}),(0,s.jsxs)("div",{className:"flex justify-center mt-4 space-x-2",children:[(0,s.jsx)(y,{onClick:m,children:"下载图片"}),(0,s.jsx)(y,{onClick:g,children:"复制图片"})]}),(0,s.jsx)(A,{className:"hidden",children:"Img preview"})]})}),[e,h,c,m,g]),v=(0,f.useCallback)(e=>{e.addAction({id:"cangjie.share.picture",label:"分享 (图片)",contextMenuGroupId:"share",contextMenuOrder:1.5,run:async()=>{k.Am.promise(u(e.getValue()),{success:"已生成图片",error:"生成图片失败",loading:"正在生成图片..."})}})},[u]);return{isOpen:e,shareUrl:n,code:a,openDialog:u,closeDialog:h,DialogComponent:p,addSharePictureAction:v}}(),b=(0,f.useMemo)(()=>(function(e){let{setToolOutput:t,setProgramOutput:n,setMonacoInst:r,addSharePictureAction:a}=e;return(e,a)=>{e.updateOptions({unicodeHighlight:{ambiguousCharacters:!1}}),a.languages.registerDocumentFormattingEditProvider("cangjie",{async provideDocumentFormattingEdits(e){var n;if(ee())return;let r=e.getValue();return k.Am.promise(new Promise((e,n)=>{let a=e=>{t(e),n(e)};X.acquire("run",async()=>{let[s,l]=await W(r,"format");switch(l){case o.RATE_LIMIT:a("Load exceeded, please try again later");return;case o.UNKNOWN_ERROR:a("Failed to format，error unknown");return}s.ok?(r=s.stdout,t("Format complete"),e("Failed to format")):(t(s.stderr),n("Failed to format"))})}),{success:"Format complete",error:e=>e,loading:"Formatting..."}),await X.acquire("run",()=>{}),null===(n=window.umami)||void 0===n||n.track("format"),[{range:e.getFullModelRange(),text:r}]}}),e.addAction({id:"cangjie.compile.run",label:"Run",contextMenuGroupId:"navigation",contextMenuOrder:1.5,keybindings:[a.KeyMod.CtrlCmd|a.KeyCode.KeyB],run:async e=>{var r;ee()||(k.Am.promise(async()=>{await X.acquire("run",async()=>{await J(e.getValue(),{setToolOutput:t,setProgramOutput:n})})},{success:"Succeed",error:"Failed to execute",loading:"Running..."}),null===(r=window.umami)||void 0===r||r.track("run"))}}),e.addAction({id:"cangjie.save",label:"Save code",contextMenuGroupId:"navigation",contextMenuOrder:1.5,keybindings:[a.KeyMod.CtrlCmd|a.KeyCode.KeyS],run:async e=>{var t;(function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"main.saki",n=new Blob([e],{type:"text/plain;charset=utf-8"}),r=URL.createObjectURL(n),a=document.createElement("a");a.href=r,a.download=t;let o=new MouseEvent("click",{view:window,bubbles:!0,cancelable:!0});a.dispatchEvent(o),URL.revokeObjectURL(r)})(e.getValue()),k.Am.success("Saved"),null===(t=window.umami)||void 0===t||t.track("save")}}),r(a)}})({addSharePictureAction:x,setMonacoInst:c,setProgramOutput:r,setToolOutput:t}),[x]),w=(0,f.useMemo)(()=>es.ansi_to_html(e),[e]),N=(0,f.useMemo)(()=>es.ansi_to_html(n),[n]);return(0,s.jsxs)("div",{className:"flex flex-col h-screen overflow-hidden bg-background text-foreground ".concat(T()&&"dark"),children:[(0,s.jsxs)("div",{className:"flex flex-col h-full overflow-hidden bg-background text-foreground p-4",children:[(0,s.jsxs)("div",{className:"flex-none px-2 md:px-4 pt-2 md:pt-4 flex flex-col md:flex-row justify-between items-center",children:[(0,s.jsx)("div",{className:"flex items-center md:mb-0 mb-2",children:(0,s.jsx)("h1",{className:"text-2xl font-bold",children:"Saki Playground"})}),(0,s.jsx)("div",{className:"flex flex-row space-y-0 space-x-2 w-full md:w-auto",children:(0,s.jsx)(y,{onClick:h,className:"w-full sm:w-auto",children:"Run"})})]}),(0,s.jsxs)("div",{className:"flex-1 flex flex-col md:flex-row overflow-hidden",children:[(0,s.jsx)("div",{className:"flex-1 p-2 md:p-4 flex flex-col overflow-hidden",children:(0,s.jsx)(G.ZP,{loading:(0,s.jsx)("div",{children:"Loading Editor..."}),height:"100%",defaultLanguage:"cangjie",defaultValue:'\neval "==== Red-Black Tree ===="\n\ntype Option[A: \'Type] = inductive {\n    None\n    Some(A)\n}\n\ndef intOptionToString(option: Option[ℤ]): String = match option {\n    case Option[ℤ]::None => "None"\n    case Option[ℤ]::Some(value) => value.toString\n}\n\n// Definition of possible colors in a Red-Black Tree\n// Red or Black color to maintain tree properties\ntype Color = inductive {\n    Red\n    Black\n}\n\n// Definition of the Red-Black Tree data structure\n// Tree can be a Leaf or a Node with color, value, left and right children\ntype Tree = inductive {\n    Leaf\n    Node(Color, ℤ, Tree, Tree)\n}\n\n// Function to balance the Red-Black Tree after insertion\n// Ensures that Red-Black Tree properties are maintained, such as balancing after consecutive red nodes\ndef balance(tree: Tree): Tree = match tree {\n    // Left-Left case (left subtree of left child is red)\n    // Perform a right rotation to balance the tree\n    // This situation occurs when the left child and its left child are both red, causing a violation\n    case Tree::Node(\n        Color::Black, valueRight,\n        Tree::Node(\n            Color::Red, valueTop,\n            Tree::Node(Color::Red, valueLeft, leftLeft, leftRight),\n            rightLeft\n        ), rightRight\n    ) | Tree::Node(\n        Color::Black, valueRight,\n        Tree::Node(\n            Color::Red, valueLeft,\n            leftLeft,\n            Tree::Node(Color::Red, valueTop, leftRight, rightLeft)\n        ), rightRight\n    ) => Tree::Node(\n        Color::Red, valueTop,\n        Tree::Node(Color::Black, valueLeft, leftLeft, leftRight),\n        Tree::Node(Color::Black, valueRight, rightLeft, rightRight)\n    )\n\n    // Right-Right case (right subtree of right child is red)\n    // Perform a left rotation to balance the tree\n    // This situation occurs when the right child and its right child are both red, causing a violation\n    case Tree::Node(\n        Color::Black, valueLeft,\n        leftLeft,\n        Tree::Node(\n            Color::Red, valueRight,\n            Tree::Node(Color::Red, valueTop, leftRight, rightLeft),\n            rightRight\n        )\n    ) | Tree::Node(\n        Color::Black, valueLeft,\n        leftLeft,\n        Tree::Node(\n            Color::Red, valueTop,\n            leftRight,\n            Tree::Node(Color::Red, valueRight, rightLeft, rightRight)\n        )\n    ) => Tree::Node(\n        Color::Red, valueTop,\n        Tree::Node(Color::Black, valueLeft, leftLeft, leftRight),\n        Tree::Node(Color::Black, valueRight, rightLeft, rightRight)\n    )\n\n    // Recoloring case: both children are red\n    // Recolor the children to black and maintain the parent as red\n    // This occurs to fix the situation where both children of a red node are also red\n    case Tree::Node(\n        Color::Red, value,\n        Tree::Node(Color::Red, leftValue, leftLeft, leftRight),\n        Tree::Node(Color::Red, rightValue, rightLeft, rightRight)\n    ) => Tree::Node(\n        Color::Red, value,\n        Tree::Node(Color::Black, leftValue, leftLeft, leftRight),\n        Tree::Node(Color::Black, rightValue, rightLeft, rightRight)\n    )\n\n    // Other cases: no need to balance\n    case node => node\n}\n\n// Insert a new value into the Red-Black Tree as a red node\n// Recursively inserts the new value and then balances the tree if necessary\ndef insertRed(tree: Tree, newValue: ℤ): Tree = match tree {\n    case Tree::Leaf => Tree::Node(Color::Red, newValue, Tree::Leaf, Tree::Leaf)\n    case Tree::Node(color, value, left, right) => if newValue < value then {\n        Tree::Node(color, value, left.insertRed(newValue), right).balance\n    } else if newValue > value then {\n        Tree::Node(color, value, left, right.insertRed(newValue)).balance\n    } else {\n        Tree::Node(color, newValue, left, right)\n    }\n}\n\n// inserting a value into the Red-Black Tree\n// Ensures that the root of the tree is always black after insertion\ndef insert(tree: Tree, value: ℤ): Tree = match tree.insertRed(value) {\n    case Tree::Node(Color::Red, value, left, right) => Tree::Node(Color::Black, value, left, right)\n    case Tree::Node(Color::Black, value, left, right) => Tree::Node(Color::Black, value, left, right)\n    case Tree::Leaf => Tree::Leaf   // Should not happen\n}\n\ndef find(tree: Tree, target: ℤ): Option[ℤ] = match tree {\n    case Tree::Leaf => Option[ℤ]::None\n    case Tree::Node(color, value, left, right) => {\n        if target < value then {\n            left.find(target)\n        } else if target > value then {\n            right.find(target)\n        } else {\n            Option[ℤ]::Some(value)\n        }\n    }\n}\n\n// Find the predecessor of a given value in the Red-Black Tree\n// The predecessor is the largest value smaller than the given value\ndef predecessor(tree: Tree, value: ℤ): Option[ℤ] = match tree {\n    case Tree::Leaf => Option[ℤ]::None\n    case Tree::Node(color, nodeValue, left, right) => if value <= nodeValue then {\n        // Search in the left subtree if the value is less than or equal to the current node\'s value\n        left.predecessor(value)\n    } else {\n        // Search in the right subtree, but also consider the current node as a potential predecessor\n        match right.predecessor(value) {\n            case Option[ℤ]::None => Option[ℤ]::Some(nodeValue)\n            case Option[ℤ]::Some(pred) => Option[ℤ]::Some(pred)\n        }\n    }\n}\n\n// Find the successor of a given value in the Red-Black Tree\n// The successor is the smallest value greater than the given value\ndef successor(tree: Tree, value: ℤ): Option[ℤ] = match tree {\n    case Tree::Leaf => Option[ℤ]::None\n    case Tree::Node(color, nodeValue, left, right) => if value >= nodeValue then {\n        // Search in the right subtree if the value is greater than or equal to the current node\'s value\n        right.successor(value)\n    } else {\n        // Search in the left subtree, but also consider the current node as a potential successor\n        match left.successor(value) {\n            case Option[ℤ]::None => Option[ℤ]::Some(nodeValue)\n            case Option[ℤ]::Some(succ) => Option[ℤ]::Some(succ)\n        }\n    }\n}\n\ndef depth(tree: Tree): ℤ = match tree {\n    case Tree::Leaf => 0\n    case Tree::Node(c, x, left, right) => max(left.depth, right.depth) + 1\n}\n\ndef formatLevel(tree: Tree, level maxDepth: ℤ): String = {\n    let spaces = " ".repeat(2 ** maxDepth - 1)\n    if level == 0 then {\n        match tree {\n            case Tree::Leaf => " "\n            case Tree::Node(c, value, l, r) => value.toString\n        } ++ spaces\n    } else match tree {\n        case Tree::Leaf => " "\n        case Tree::Node(c, x, left, right) => {\n            let leftStr = left.formatLevel(level - 1, maxDepth - 1)\n            let rightStr = right.formatLevel(level - 1, maxDepth - 1)\n            leftStr ++ rightStr\n        }\n    }\n}\n\ndef formatLevelBelow(tree: Tree, level maxDepth: ℤ): String = {\n    if level >= maxDepth then "" else {\n        let prefixStr = " ".repeat(2 ** (maxDepth - 1 - level) + 4)\n        let currentLevelStr = tree.formatLevel(level, maxDepth)\n        let levelBelowStr = tree.formatLevelBelow(level + 1, maxDepth)\n        prefixStr ++ currentLevelStr ++ "\\n" ++ levelBelowStr\n    }\n}\n\ndef formatTree(tree: Tree): String = tree.formatLevelBelow(0, tree.depth)\n\ndef step1Insert5: Tree = Tree::Leaf.insert(5)\n\neval "RBTree after inserting 5: "\neval step1Insert5.formatTree\n\ndef step2Insert2: Tree = step1Insert5.insert(2)\n\neval "RBTree after inserting 2: "\neval step2Insert2.formatTree\n\ndef step3Insert7: Tree = step2Insert2.insert(7)\n\neval "RBTree after inserting 7: "\neval step3Insert7.formatTree\n\ndef step4Insert9: Tree = step3Insert7.insert(9)\n\neval "RBTree after inserting 9: "\neval step4Insert9.formatTree\n\ndef step5Insert8: Tree = step4Insert9.insert(8)\n\neval "RBTree after inserting 8: "\neval step5Insert8.formatTree\n\ndef step6Insert1: Tree = step5Insert8.insert(1)\n\neval "RBTree after inserting 1: "\neval step6Insert1.formatTree\n\ndef step7Insert3: Tree = step6Insert1.insert(3)\n\neval "RBTree after inserting 3: "\neval step7Insert3.formatTree\n\ndef step8Insert1Again: Tree = step7Insert3.insert(1)\n\neval "RBTree after inserting 1 again: "\neval step8Insert1Again.formatTree\n\ndef step9Insert4: Tree = step8Insert1Again.insert(4)\n\neval "RBTree after inserting 4: "\neval step9Insert4.formatTree\n\n// It\'s myTree!!!!!\ndef myTree: Tree = step9Insert4\n\neval ""\neval "==== Test Predecessor and Successor ===="\n\neval "The predecessor of 5 is " ++ myTree.predecessor(5).intOptionToString\neval "The successor of 5 is " ++ myTree.successor(5).intOptionToString\neval "The successor of 9 is " ++ myTree.successor(9).intOptionToString\neval "The predecessor of 1 is " ++ myTree.predecessor(1).intOptionToString\n',className:"border",theme:T()?"vitesse-dark":"vitesse-light",options:{minimap:{enabled:!1},scrollBeyondLastLine:!0,fontSize:14,fontFamily:u,fontLigatures:!1,mouseWheelZoom:!0},beforeMount:Q,onMount:b})}),(0,s.jsxs)("div",{className:"w-full md:w-1/3 p-2 md:p-4 flex flex-col h-auto md:h-full",children:[(0,s.jsx)("div",{className:"md:hidden mb-2",children:(0,s.jsxs)(y,{onClick:g,variant:"outline",className:"w-full flex justify-between items-center",children:[(0,s.jsxs)("span",{children:[a?"Show ":"Hide ","the output"]}),a?(0,s.jsx)(ea.Z,{className:"h-4 w-4"}):(0,s.jsx)(er.Z,{className:"h-4 w-4"})]})}),(0,s.jsxs)("div",{className:"flex-1 overflow-hidden transition-all duration-300 ease-in-out ".concat(a?"max-h-0 opacity-0":"max-h-[100vh] opacity-100"),children:[(0,s.jsxs)("div",{className:"flex flex-col h-1/2 pb-1 md:pb-2",children:[(0,s.jsx)("h2",{className:"text-sm md:text-lg font-semibold mb-1 md:mb-2",children:"Tool Output"}),(0,s.jsx)("div",{className:"flex-1 border rounded font-mono text-xs md:text-sm bg-muted overflow-hidden",children:(0,s.jsx)("div",{className:"".concat(p?"h-full":"h-[15vh]"," overflow-auto p-1 md:p-2"),children:(0,s.jsx)("pre",{style:{fontFamily:u},dangerouslySetInnerHTML:{__html:w}})})})]}),(0,s.jsxs)("div",{className:"flex flex-col h-1/2 pt-1 md:pt-2",children:[(0,s.jsx)("h2",{className:"text-sm md:text-lg font-semibold mb-1 md:mb-2",children:"Standard Output"}),(0,s.jsx)("div",{className:"flex-1 border rounded font-mono text-xs md:text-sm bg-muted overflow-hidden",children:(0,s.jsx)("div",{className:"".concat(p?"h-full":"h-[15vh]"," overflow-auto p-1 md:p-2"),children:(0,s.jsx)("pre",{style:{fontFamily:u},dangerouslySetInnerHTML:{__html:N}})})})]})]})]})]})]}),(0,s.jsxs)("div",{className:"flex-none p-4 pt-0 text-center text-sm text-muted-foreground",children:["Saki 0.0.1 |\xa0",(0,s.jsx)("a",{href:"https://saki-lang.github.io/",className:"hover:underline",target:"_blank",rel:"noopener noreferrer",children:"Documents"})]}),v,(0,s.jsx)(R,{richColors:!0,position:"top-center"}),(0,s.jsx)(m,{}),(0,s.jsx)(et.c,{})]})}}},function(e){e.O(0,[4927,9652,4477,9275,1744],function(){return e(e.s=44829)}),_N_E=e.O()}]);